name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

env:
  AWS_SDK_LOAD_CONFIG: 1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
  AWS_REGION: us-east-1
  ECR_REGISTRY: 590951457535.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ef-test-k8s
  IMAGE_TAG: ${{ github.sha }}
  EKS_CLUSTER_NAME: dev-stage
  
jobs:
   build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: aws/k8s-set-context@v1.2.0
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl



          
      - name: Login to ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.ECR_REGISTRY }}
          registry-type: private
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Docker Image
        id: build_image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Push Docker Image to ECR
        id: push_image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          build-args: |
            AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}

      - name: Deploy to EKS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }}
