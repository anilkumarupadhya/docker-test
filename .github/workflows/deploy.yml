name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

env:
  AWS_SDK_LOAD_CONFIG: 1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
  EKS_CLUSTER_NAME: dev-exam.us-east-1.eksctl.io
  AWS_REGION: us-east-1

  
  ECR_REGISTRY: 590951457535.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ef-test-k8s
  IMAGE_TAG: ${{ github.sha }}
  
  KUBECTL: docker run --rm -it -v $HOME/.kube:/root/.kube bitnami/kubectl:1.22.0-debian-10-r0
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up kubectl
        uses: docker://bitnami/kubectl:1.22.0-debian-10-r0
  


      
          
      - name: Use EKS context
        run: |
          kubectl config use-context ${{ env.EKS_CLUSTER_NAME }}


          
      - name: Login to ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.ECR_REGISTRY }}
          registry-type: private
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Docker Image
        id: build_image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Push Docker Image to ECR
        id: push_image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          build-args: |
            AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}

      - name: Deploy to EKS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }}
