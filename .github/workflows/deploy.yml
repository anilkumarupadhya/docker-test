name: Docker ECR and EKS Deployment

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 590951457535
  ECR_URI: 590951457535.dkr.ecr.us-east-1.amazonaws.com/ef-test-k8s
  EKS_CLUSTER_NAME: DEV-EKS

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ env.ECR_URI }}:${{ github.sha }}

      - name: Push Docker image to Amazon ECR
        if: steps.build-image.outputs.digest != ''
        run: |
          echo "ECR URI: ${{ env.ECR_URI }}"
          docker tag ${{ steps.build-image.outputs.image }} ${{ env.ECR_URI }}:${{ github.sha }}
          docker push ${{ env.ECR_URI }}:${{ github.sha }}


      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.KUBECONFIG_CONTENTS }}' | base64 -d > ~/.kube/config

      - name: Deploy to Amazon EKS
        if: steps.build-image.outputs.digest != ''
        run: |
          kubectl set image deployment/my-deployment my-container=${{ env.ECR_URI }}:${{ github.sha }}
